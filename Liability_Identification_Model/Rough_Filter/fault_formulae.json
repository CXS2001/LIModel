{
    "sub_law_violation_3": "eventually(((trafficLightAheadcolor==2)and(stoplineAhead<=0.0))and(always[0,4](not(speed>0.5))))",
    "sub_law_violation_4": "eventually(((trafficLightAheadcolor==2)and((currentLanenumber+1)==0))and(always[0,4](not(speed>0.5))))",
    "sub_law_violation_5": "eventually(((((trafficLightAheadcolor==2)and(stoplineAhead<=3.5))and(not(stoplineAhead<=0.5)))and(currentLanenumber>0))and(always[0,3](not(speed<5.0))))",
    "sub_law_violation_6": "eventually((((trafficLightAheadcolor==1)and(stoplineAhead<=2.0))and(not(direction==2)))and(always[0,3](not(speed<5.0))))",
    "sub_law_violation_7": "eventually((((trafficLightAheadcolor==1)and(junctionAhead<=2.0))and(not(direction==2)))and(always[0,3](not(speed<5.0))))",
    "sub_law_violation_8": "eventually((((((trafficLightAheadcolor==1)and(stoplineAhead<=2.0))and(direction==2))and(not(PriorityNPCAhead==1)))and(not(PriorityPedsAhead==1)))and(always[0,4](not(speed>0.5))))",
    "sub_law_violation_9": "eventually((((((trafficLightAheadcolor==1)and(junctionAhead<=2.0))and(direction==2))and(not(PriorityNPCAhead==1)))and(not(PriorityPedsAhead==1)))and(always[0,4](not(speed>0.5))))",
    "sub_law_violation_11": "eventually((currentLanenumber>=2)and(not(speed<=speedLimitupperLimit)))",
    "sub_law_violation_12": "eventually(((isLaneChanging==1)and(currentLanenumber>=2))and(PriorityNPCAhead==1))",
    "sub_law_violation_14": "eventually(not(speed<=speedLimitupperLimit))",
    "sub_law_violation_15": "eventually((direction==1)and(not(speed<=300)))",
    "sub_law_violation_16": "eventually((direction==2)and(not(speed<=300)))",
    "sub_law_violation_17": "eventually((isTurningAround==1)and(not(speed<=300)))",
    "sub_law_violation_18": "eventually((rain>=50)and(not(speed<=300)))",
    "sub_law_violation_19": "eventually((fog>=50)and(not(speed<=300)))",
    "sub_law_violation_20": "eventually((snow>=50)and(not(speed<=300)))",
    "sub_law_violation_21": "eventually((visibility<=50)and(not(speed<=300)))",
    "sub_law_violation_28": "eventually((isOverTaking==1)and(always[0,10]((isLaneChanging==1)and(not(NearestNPCAhead<=5.0)))))",
    "sub_law_violation_29": "eventually((isOverTaking==1)and(always[0,10](not(isLaneChanging==1))))",
    "sub_law_violation_30": "eventually(gear==2)",
    "sub_law_violation_37": "eventually(((trafficLightAheadcolor==3)and(not(NPCAheadAhead<=8.0)))and(NPCAheadAhead<=5.0))",
    "sub_law_violation_38": "eventually(((trafficLightAheadcolor==3)and((not(NPCAheadAhead<=8.0))and(NPCAheadAhead<=8.0)))and(always[0,4](not(speed>5.0))))",
    "sub_law_violation_39": "eventually(((trafficLightAheadcolor==3)and((not(NPCAheadAhead<=8.0))and(NPCAheadAhead<=8.0)))and(NPCAheadAhead<=5.0))",
    "sub_law_violation_40": "eventually(((trafficLightAheadcolor==3)and((eventually[0,4](NPCAheadspeed>0.5))and(NPCAheadAhead<=8.0)))and(always[0,4](not(speed>5.0))))",
    "sub_law_violation_41": "eventually(((trafficLightAheadcolor==3)and((eventually[0,4](NPCAheadspeed>0.5))and(NPCAheadAhead<=8.0)))and(NPCAheadAhead<=5.0))",
    "sub_law_violation_42": "eventually(((trafficLightAheadcolor==1)and(stoplineAhead<=2.0))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_43": "eventually(((trafficLightAheadcolor==1)and(junctionAhead<=2.0))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_44": "eventually(((trafficLightAheadcolor==1)and(NPCAheadAhead<=5.0))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_45": "eventually((((direction==2)and(NPCAheadAhead<=5.0))and(eventually[0,2](NPCAheadspeed<5.0)))and(always[0,3](not(speed<5.0))))",
    "sub_law_violation_46": "eventually(((direction==2)and(PriorityNPCAhead==1))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_47": "eventually(((direction==2)and(PriorityPedsAhead==1))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_48": "eventually(((direction==1)and(PriorityNPCAhead==1))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_49": "eventually(((direction==1)and(PriorityPedsAhead==1))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_51": "eventually((((signalAhead==0)and(PriorityPedsAhead==1))and(junctionAhead<=1.0))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_52": "eventually(((isTrafficJam==1)and(NPCAheadspeed<5.0))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_53": "eventually(((isTrafficJam==1)and(NPCAheadAhead<=5.0))and(always[0,2](not(speed<5.0))))",
    "sub_law_violation_54": "eventually(((isTrafficJam==1)and(junctionAhead<=1.0))and(always[0,2](not(speed<5.0))))"
}